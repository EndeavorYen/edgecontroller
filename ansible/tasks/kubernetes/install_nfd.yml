# Copyright 2019 Intel Corporation. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Create temp dir
  tempfile:
    state: directory
    suffix: nfd
  register: tmp_dir

- name: Download NFD master (v0.4.0) DaemonSet
  get_url:
    url: "https://raw.githubusercontent.com/kubernetes-sigs/node-feature-discovery/v0.4.0/nfd-master.yaml.template"
    dest: "{{ tmp_dir.path }}/nfd-master-daemonset.yml"

- name: Download NFD worker (v0.4.0) DaemonSet
  get_url:
    url: "https://raw.githubusercontent.com/kubernetes-sigs/node-feature-discovery/v0.4.0/nfd-worker-daemonset.yaml.template"
    dest: "{{ tmp_dir.path }}/nfd-worker-daemonset.yml"

- name: Create kustomization.yml
  copy:
    dest: "{{ tmp_dir.path }}/kustomization.yml"
    content: |
      resources:
      - nfd-master-daemonset.yml
      - nfd-worker-daemonset.yml
      patchesJson6902:
      - target:
          group: apps
          version: v1
          kind: DaemonSet
          name: nfd-master
        path: enable_nfd_master_certs.yml
      - target:
          group: apps
          version: v1
          kind: DaemonSet
          name: nfd-master
        path: add_nfd_namespace.yml
      - target:
          group: apps
          version: v1
          kind: DaemonSet
          name: nfd-worker
        path: enable_nfd_worker_certs.yml
      - target:
          group: apps
          version: v1
          kind: DaemonSet
          name: nfd-worker
        path: add_nfd_namespace.yml
      - target:
          version: v1
          kind: ServiceAccount
          name: nfd-master
        path: replace_service_account_namespace.yml
      - target:
          group: rbac.authorization.k8s.io
          version: v1
          kind: ClusterRoleBinding
          name: nfd-master
        path: replace_cluster_role_binding_namespace.yml
      - target:
          version: v1
          kind: Service
          name: nfd-master
        path: add_nfd_namespace.yml

- name: Create replace_service_account_namespace.yml
  copy:
    dest: "{{ tmp_dir.path }}/replace_service_account_namespace.yml"
    content: |
      - op: replace
        path: /metadata/namespace
        value: openness

- name: Create add_nfd_namespace.yml
  copy:
    dest: "{{ tmp_dir.path }}/add_nfd_namespace.yml"
    content: |
      - op: add
        path: /metadata/namespace
        value: openness

- name: Create replace_cluster_role_binding_namespace.yml
  copy:
    dest: "{{ tmp_dir.path }}/replace_cluster_role_binding_namespace.yml"
    content: |
      - op: replace
        path: /subjects/0/namespace
        value: openness

- name: Create enable_nfd_master_certs.yml
  copy:
    dest: "{{ tmp_dir.path }}/enable_nfd_master_certs.yml"
    content: |
      - op: add
        path: /spec/template/spec/containers/0/args
        value:
          - "--ca-file=/root/certs/root.pem"
          - "--key-file=/root/certs/key.pem"
          - "--cert-file=/root/certs/cert.pem"
      - op: add
        path: /spec/template/spec/containers/0/volumeMounts
        value:
        - name: certs
          mountPath: /root/certs
          readOnly: true
      - op: add
        path: /spec/template/spec/volumes
        value:
          - name: ca
            secret:
              secretName: root-ca
          - name: certgen
            secret:
              secretName: certgen
              defaultMode: 0777
          - name: certs
            hostPath:
              path: /var/lib/appliance/certs/nfd
      - op: add
        path: /spec/template/spec/initContainers
        value:
          - name: openssl
            image: emberstack/openssl:latest
            command: ["sh", "-c"]
            args: ["mkdir /root/ca && 
              cp /root/CA/* /root/ca/ && 
              cp /root/CA/cert.pem /root/certs/root.pem && 
              (sh /root/certgen/tls_pair.sh nfd-master /root/certs /root/ca)"]
            imagePullPolicy: IfNotPresent
            volumeMounts:
            - name: ca
              mountPath: /root/CA
            - name: certs
              mountPath: /root/certs
            - name: certgen
              mountPath: /root/certgen

- name: Create enable_nfd_worker_certs.yml
  copy:
    dest: "{{ tmp_dir.path }}/enable_nfd_worker_certs.yml"
    content: |
      - op: add
        path: /spec/template/spec/containers/0/args/-
        value: "--ca-file=/root/certs/root.pem"
      - op: add
        path: /spec/template/spec/containers/0/args/-
        value: "--key-file=/root/certs/key.pem"
      - op: add
        path: /spec/template/spec/containers/0/args/-
        value: "--cert-file=/root/certs/cert.pem"
      - op: add
        path: /spec/template/spec/containers/0/volumeMounts/-
        value:
          name: certs
          mountPath: /root/certs
          readOnly: true
      - op: add
        path: /spec/template/spec/volumes/-
        value:
          name: ca
          secret:
            secretName: root-ca
      - op: add
        path: /spec/template/spec/volumes/-
        value:
          name: certgen
          secret:
            secretName: certgen
            defaultMode: 0777
      - op: add
        path: /spec/template/spec/volumes/-
        value:
          name: certs
          hostPath:
            path: /var/lib/appliance/certs/nfd
      - op: add
        path: /spec/template/spec/initContainers
        value:
          - name: openssl
            image: emberstack/openssl:latest
            command: ["sh", "-c"]
            args: ["mkdir /root/ca && 
              cp /root/CA/* /root/ca/ && 
              cp /root/CA/cert.pem /root/certs/root.pem && 
              (sh /root/certgen/tls_pair.sh nfd-worker /root/certs /root/ca)"]
            imagePullPolicy: IfNotPresent
            volumeMounts:
            - name: ca
              mountPath: /root/CA
            - name: certs
              mountPath: /root/certs
            - name: certgen
              mountPath: /root/certgen

- name: Apply NFD Traffic Policies
  shell: kubectl apply -f {{ repo_path }}/kube-ovn/nfd_network_policy.yml

- name: Install NFD plugin
  shell: kubectl kustomize . | kubectl apply -f -
  args:
    chdir: "{{ tmp_dir.path }}"

- name: Remove temp directory
  file:
    path: "{{ tmp_dir.path }}"
    state: absent
  when: tmp_dir.path is defined
