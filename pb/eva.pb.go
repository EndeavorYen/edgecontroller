// Code generated by protoc-gen-go. DO NOT EDIT.
// source: eva.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ContainerIP struct {
	Ip                   string   `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContainerIP) Reset()         { *m = ContainerIP{} }
func (m *ContainerIP) String() string { return proto.CompactTextString(m) }
func (*ContainerIP) ProtoMessage()    {}
func (*ContainerIP) Descriptor() ([]byte, []int) {
	return fileDescriptor_78739cf76c9af146, []int{0}
}

func (m *ContainerIP) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerIP.Unmarshal(m, b)
}
func (m *ContainerIP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerIP.Marshal(b, m, deterministic)
}
func (m *ContainerIP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerIP.Merge(m, src)
}
func (m *ContainerIP) XXX_Size() int {
	return xxx_messageInfo_ContainerIP.Size(m)
}
func (m *ContainerIP) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerIP.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerIP proto.InternalMessageInfo

func (m *ContainerIP) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

// ContainerInfo represents the state of a running application.
type ContainerInfo struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContainerInfo) Reset()         { *m = ContainerInfo{} }
func (m *ContainerInfo) String() string { return proto.CompactTextString(m) }
func (*ContainerInfo) ProtoMessage()    {}
func (*ContainerInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_78739cf76c9af146, []int{1}
}

func (m *ContainerInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerInfo.Unmarshal(m, b)
}
func (m *ContainerInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerInfo.Marshal(b, m, deterministic)
}
func (m *ContainerInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerInfo.Merge(m, src)
}
func (m *ContainerInfo) XXX_Size() int {
	return xxx_messageInfo_ContainerInfo.Size(m)
}
func (m *ContainerInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerInfo proto.InternalMessageInfo

func (m *ContainerInfo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func init() {
	proto.RegisterType((*ContainerIP)(nil), "openness.eva.ContainerIP")
	proto.RegisterType((*ContainerInfo)(nil), "openness.eva.ContainerInfo")
}

func init() { proto.RegisterFile("eva.proto", fileDescriptor_78739cf76c9af146) }

var fileDescriptor_78739cf76c9af146 = []byte{
	// 511 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0xc1, 0x6e, 0xd3, 0x4e,
	0x10, 0xc6, 0x65, 0xff, 0xf5, 0x47, 0xea, 0x12, 0xaa, 0xca, 0x12, 0x08, 0x52, 0x0a, 0xab, 0x9c,
	0x50, 0x45, 0xbc, 0x69, 0xe8, 0x29, 0x27, 0xdc, 0x2a, 0xaa, 0x0c, 0x55, 0xb0, 0x52, 0xc1, 0x81,
	0xdb, 0xd8, 0x9e, 0xd8, 0x4b, 0xed, 0x9d, 0x65, 0x77, 0x5d, 0x68, 0x8f, 0x1c, 0x78, 0x80, 0x72,
	0xe6, 0xc4, 0x85, 0x57, 0x40, 0xe2, 0x2d, 0x78, 0x05, 0x5e, 0x03, 0x09, 0xd9, 0x15, 0x69, 0xaa,
	0xaa, 0xa7, 0xd5, 0xce, 0xf7, 0xdb, 0x6f, 0xbe, 0x1d, 0x0d, 0x5b, 0xc3, 0x13, 0x08, 0xb5, 0x21,
	0x47, 0x41, 0x8f, 0x34, 0x2a, 0x85, 0xd6, 0x86, 0x78, 0x02, 0xfd, 0x87, 0x05, 0x51, 0x51, 0xa1,
	0x00, 0x2d, 0x05, 0x28, 0x45, 0x0e, 0x9c, 0x24, 0x65, 0x2f, 0xd8, 0xfe, 0xd3, 0xee, 0xc8, 0x86,
	0x05, 0xaa, 0xa1, 0xfd, 0x00, 0x45, 0x81, 0x46, 0x90, 0xee, 0x88, 0xeb, 0xf4, 0x60, 0x8b, 0xdd,
	0xde, 0x27, 0xe5, 0x40, 0x2a, 0x34, 0x71, 0x12, 0xac, 0x33, 0x5f, 0xea, 0xfb, 0x1e, 0xf7, 0x9e,
	0xac, 0xcd, 0x7d, 0xa9, 0x07, 0x8f, 0xd9, 0x9d, 0x4b, 0x59, 0x2d, 0xa8, 0x03, 0xf2, 0x25, 0x90,
	0x8f, 0xbf, 0xfb, 0x6c, 0xab, 0x25, 0x0c, 0x55, 0x15, 0x9a, 0x37, 0xd2, 0xb8, 0x06, 0x2a, 0x79,
	0xd6, 0xf5, 0x88, 0x0a, 0x54, 0x2e, 0xf8, 0xec, 0xb3, 0x8d, 0x03, 0x74, 0x4b, 0x9b, 0xbd, 0xd3,
	0x38, 0x09, 0x1e, 0x84, 0xab, 0x3f, 0x0a, 0x57, 0x22, 0xf4, 0x37, 0x6f, 0x92, 0xd4, 0x82, 0x06,
	0x3f, 0xbc, 0xf3, 0xe8, 0x9b, 0xd7, 0x7f, 0x35, 0xc7, 0xf7, 0x0d, 0x5a, 0xc7, 0xa5, 0x5a, 0x10,
	0x27, 0xc5, 0x81, 0x67, 0xff, 0x38, 0x5e, 0x83, 0x82, 0x02, 0x73, 0x9e, 0x9e, 0x72, 0x50, 0x1c,
	0x3f, 0x3a, 0x34, 0x0a, 0x2a, 0x4e, 0x26, 0x2b, 0xd1, 0x3a, 0x03, 0x8e, 0x0c, 0xaf, 0xe4, 0x31,
	0xf2, 0x97, 0x4d, 0x8a, 0x46, 0xa1, 0x43, 0xfb, 0x22, 0x61, 0xff, 0xed, 0x8e, 0x76, 0x83, 0x98,
	0x1d, 0xcc, 0x88, 0x9b, 0x46, 0x29, 0xa9, 0x8a, 0x15, 0xcb, 0x12, 0x2c, 0xb7, 0x4d, 0x56, 0xf2,
	0x38, 0xe1, 0x90, 0xe7, 0x06, 0xad, 0x6d, 0xbb, 0xba, 0x12, 0xf9, 0x8c, 0x72, 0xe4, 0x35, 0x1c,
	0xb7, 0x0f, 0xda, 0xbb, 0xb9, 0x48, 0xf6, 0xe9, 0xd7, 0xef, 0x2f, 0x7e, 0x2f, 0x60, 0x62, 0x69,
	0xb2, 0xf7, 0xd5, 0x3f, 0x8f, 0xfe, 0x78, 0xc1, 0x4f, 0x8f, 0x3d, 0x8a, 0xb4, 0xae, 0x64, 0xd6,
	0x0d, 0x89, 0x5f, 0x9d, 0x19, 0x8f, 0x92, 0x78, 0x10, 0x31, 0x76, 0x54, 0x83, 0x71, 0x7c, 0x9a,
	0x17, 0x18, 0x6c, 0x16, 0xd2, 0x95, 0x4d, 0x1a, 0x66, 0x54, 0x0b, 0xdb, 0x96, 0x31, 0x2f, 0xb0,
	0xc6, 0x4c, 0xb4, 0xbb, 0x70, 0xcf, 0x36, 0x5a, 0x93, 0x71, 0xcf, 0x3b, 0x65, 0xd8, 0x4a, 0x2d,
	0xb8, 0x9d, 0xb0, 0x20, 0xd2, 0x90, 0x95, 0xc8, 0xc7, 0xe1, 0x88, 0x1f, 0xca, 0x0c, 0x95, 0xc5,
	0x60, 0x52, 0x3a, 0xa7, 0xed, 0x44, 0x88, 0x9b, 0x2c, 0x6d, 0x56, 0x62, 0x0d, 0x22, 0xad, 0x28,
	0x15, 0x35, 0x58, 0x87, 0x46, 0x1c, 0xc6, 0xfb, 0xd3, 0xd9, 0xd1, 0x74, 0xfc, 0xff, 0x4e, 0x38,
	0x0a, 0x47, 0xdb, 0x9e, 0x3f, 0xde, 0x80, 0xcb, 0xf8, 0xe2, 0x9d, 0x25, 0x35, 0xb9, 0x56, 0x99,
	0xdf, 0x6d, 0x07, 0xba, 0x13, 0xac, 0xb3, 0xde, 0x6b, 0x05, 0x8d, 0x2b, 0xc9, 0xc8, 0x33, 0xcc,
	0xdf, 0xf6, 0x33, 0xca, 0x31, 0xbc, 0x9a, 0x55, 0x60, 0x05, 0x42, 0xa7, 0xe9, 0xad, 0x6e, 0x23,
	0x9f, 0xfd, 0x0d, 0x00, 0x00, 0xff, 0xff, 0xba, 0x28, 0xab, 0xe8, 0xf8, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ControllerVirtualizationAgentClient is the client API for ControllerVirtualizationAgent service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ControllerVirtualizationAgentClient interface {
	// GetContainerByIP queries an external orchestrator (e.g. Kubernetes) for
	// an application running (not stopped) on the Node making the request with
	// a given (active) Pod IP address. The identity of the Node making the
	// request is determined by the TLS certificate it presents at transport
	// authentication time.
	GetContainerByIP(ctx context.Context, in *ContainerIP, opts ...grpc.CallOption) (*ContainerInfo, error)
}

type controllerVirtualizationAgentClient struct {
	cc *grpc.ClientConn
}

func NewControllerVirtualizationAgentClient(cc *grpc.ClientConn) ControllerVirtualizationAgentClient {
	return &controllerVirtualizationAgentClient{cc}
}

func (c *controllerVirtualizationAgentClient) GetContainerByIP(ctx context.Context, in *ContainerIP, opts ...grpc.CallOption) (*ContainerInfo, error) {
	out := new(ContainerInfo)
	err := c.cc.Invoke(ctx, "/openness.eva.ControllerVirtualizationAgent/GetContainerByIP", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ControllerVirtualizationAgentServer is the server API for ControllerVirtualizationAgent service.
type ControllerVirtualizationAgentServer interface {
	// GetContainerByIP queries an external orchestrator (e.g. Kubernetes) for
	// an application running (not stopped) on the Node making the request with
	// a given (active) Pod IP address. The identity of the Node making the
	// request is determined by the TLS certificate it presents at transport
	// authentication time.
	GetContainerByIP(context.Context, *ContainerIP) (*ContainerInfo, error)
}

func RegisterControllerVirtualizationAgentServer(s *grpc.Server, srv ControllerVirtualizationAgentServer) {
	s.RegisterService(&_ControllerVirtualizationAgent_serviceDesc, srv)
}

func _ControllerVirtualizationAgent_GetContainerByIP_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContainerIP)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerVirtualizationAgentServer).GetContainerByIP(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openness.eva.ControllerVirtualizationAgent/GetContainerByIP",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerVirtualizationAgentServer).GetContainerByIP(ctx, req.(*ContainerIP))
	}
	return interceptor(ctx, in, info, handler)
}

var _ControllerVirtualizationAgent_serviceDesc = grpc.ServiceDesc{
	ServiceName: "openness.eva.ControllerVirtualizationAgent",
	HandlerType: (*ControllerVirtualizationAgentServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetContainerByIP",
			Handler:    _ControllerVirtualizationAgent_GetContainerByIP_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "eva.proto",
}
